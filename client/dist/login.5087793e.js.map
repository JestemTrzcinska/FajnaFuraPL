{"version":3,"sources":["../node_modules/regenerator-runtime/runtime.js","login.js"],"names":["init","document","getElementById","addEventListener","register_send","login_send","rodo_show","rodo_check","rodo_hide","ev","classList","remove","parentElement","window","onbeforeunload","e","message","event","returnValue","axios","post","firstName","value","lastName","email","phone","drivingLicense","password","password2","rodo","checked","res","console","log","localStorage","setItem","data","token","getItem","errors","response","forEach","error","field","param","add","setAttribute","msg","style","visibility"],"mappings":"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Y,CAAUG,EAAV,EAAc;AD4DhC,AC3DER,EAAAA,QAAQ,CAACC,cAAT,CAAwB,UAAxB,EAAoC8C,KAApC,CAA0CC,UAA1C,GAAuD,SAAvD;AD4DF,AC3DC,CAFD;AD8DA;AACA,AC3DA,IAAMzC,SAAS,GAAG,SAAZA,SAAY,CAAUC,EAAV,EAAc;AD4DhC,AC3DER,EAAAA,QAAQ,CAACC,cAAT,CAAwB,UAAxB,EAAoC8C,KAApC,CAA0CC,UAA1C,GAAuD,QAAvD;AD4DF,AC3DC,CAFD;AD8DA;AACA,AC3DA,IAAM1C,UAAU,GAAG,SAAbA,UAAa,CAAUE,EAAV,EAAc;AD4DjC,AC3DED,EAAAA,SAAS;AD4DX,AC3DEP,EAAAA,QAAQ,CAACC,cAAT,CAAwB,MAAxB,EAAgC4B,OAAhC,GAA0C,IAA1C;AD4DF,AC3DC,CAHD;AD+DA;AACA,AC3DA7B,QAAQ,CAACE,gBAAT,CAA0B,kBAA1B,EAA8CH,IAA9C;AD4DA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"login.5087793e.js","sourceRoot":"..\\src","sourcesContent":["/**\n * Copyright (c) 2014-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nvar runtime = (function (exports) {\n  \"use strict\";\n\n  var Op = Object.prototype;\n  var hasOwn = Op.hasOwnProperty;\n  var undefined; // More compressible than void 0.\n  var $Symbol = typeof Symbol === \"function\" ? Symbol : {};\n  var iteratorSymbol = $Symbol.iterator || \"@@iterator\";\n  var asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\";\n  var toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\";\n\n  function define(obj, key, value) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n    return obj[key];\n  }\n  try {\n    // IE 8 has a broken Object.defineProperty that only works on DOM objects.\n    define({}, \"\");\n  } catch (err) {\n    define = function(obj, key, value) {\n      return obj[key] = value;\n    };\n  }\n\n  function wrap(innerFn, outerFn, self, tryLocsList) {\n    // If outerFn provided and outerFn.prototype is a Generator, then outerFn.prototype instanceof Generator.\n    var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator;\n    var generator = Object.create(protoGenerator.prototype);\n    var context = new Context(tryLocsList || []);\n\n    // The ._invoke method unifies the implementations of the .next,\n    // .throw, and .return methods.\n    generator._invoke = makeInvokeMethod(innerFn, self, context);\n\n    return generator;\n  }\n  exports.wrap = wrap;\n\n  // Try/catch helper to minimize deoptimizations. Returns a completion\n  // record like context.tryEntries[i].completion. This interface could\n  // have been (and was previously) designed to take a closure to be\n  // invoked without arguments, but in all the cases we care about we\n  // already have an existing method we want to call, so there's no need\n  // to create a new function object. We can even get away with assuming\n  // the method takes exactly one argument, since that happens to be true\n  // in every case, so we don't have to touch the arguments object. The\n  // only additional allocation required is the completion record, which\n  // has a stable shape and so hopefully should be cheap to allocate.\n  function tryCatch(fn, obj, arg) {\n    try {\n      return { type: \"normal\", arg: fn.call(obj, arg) };\n    } catch (err) {\n      return { type: \"throw\", arg: err };\n    }\n  }\n\n  var GenStateSuspendedStart = \"suspendedStart\";\n  var GenStateSuspendedYield = \"suspendedYield\";\n  var GenStateExecuting = \"executing\";\n  var GenStateCompleted = \"completed\";\n\n  // Returning this object from the innerFn has the same effect as\n  // breaking out of the dispatch switch statement.\n  var ContinueSentinel = {};\n\n  // Dummy constructor functions that we use as the .constructor and\n  // .constructor.prototype properties for functions that return Generator\n  // objects. For full spec compliance, you may wish to configure your\n  // minifier not to mangle the names of these two functions.\n  function Generator() {}\n  function GeneratorFunction() {}\n  function GeneratorFunctionPrototype() {}\n\n  // This is a polyfill for %IteratorPrototype% for environments that\n  // don't natively support it.\n  var IteratorPrototype = {};\n  IteratorPrototype[iteratorSymbol] = function () {\n    return this;\n  };\n\n  var getProto = Object.getPrototypeOf;\n  var NativeIteratorPrototype = getProto && getProto(getProto(values([])));\n  if (NativeIteratorPrototype &&\n      NativeIteratorPrototype !== Op &&\n      hasOwn.call(NativeIteratorPrototype, iteratorSymbol)) {\n    // This environment has a native %IteratorPrototype%; use it instead\n    // of the polyfill.\n    IteratorPrototype = NativeIteratorPrototype;\n  }\n\n  var Gp = GeneratorFunctionPrototype.prototype =\n    Generator.prototype = Object.create(IteratorPrototype);\n  GeneratorFunction.prototype = Gp.constructor = GeneratorFunctionPrototype;\n  GeneratorFunctionPrototype.constructor = GeneratorFunction;\n  GeneratorFunction.displayName = define(\n    GeneratorFunctionPrototype,\n    toStringTagSymbol,\n    \"GeneratorFunction\"\n  );\n\n  // Helper for defining the .next, .throw, and .return methods of the\n  // Iterator interface in terms of a single ._invoke method.\n  function defineIteratorMethods(prototype) {\n    [\"next\", \"throw\", \"return\"].forEach(function(method) {\n      define(prototype, method, function(arg) {\n        return this._invoke(method, arg);\n      });\n    });\n  }\n\n  exports.isGeneratorFunction = function(genFun) {\n    var ctor = typeof genFun === \"function\" && genFun.constructor;\n    return ctor\n      ? ctor === GeneratorFunction ||\n        // For the native GeneratorFunction constructor, the best we can\n        // do is to check its .name property.\n        (ctor.displayName || ctor.name) === \"GeneratorFunction\"\n      : false;\n  };\n\n  exports.mark = function(genFun) {\n    if (Object.setPrototypeOf) {\n      Object.setPrototypeOf(genFun, GeneratorFunctionPrototype);\n    } else {\n      genFun.__proto__ = GeneratorFunctionPrototype;\n      define(genFun, toStringTagSymbol, \"GeneratorFunction\");\n    }\n    genFun.prototype = Object.create(Gp);\n    return genFun;\n  };\n\n  // Within the body of any async function, `await x` is transformed to\n  // `yield regeneratorRuntime.awrap(x)`, so that the runtime can test\n  // `hasOwn.call(value, \"__await\")` to determine if the yielded value is\n  // meant to be awaited.\n  exports.awrap = function(arg) {\n    return { __await: arg };\n  };\n\n  function AsyncIterator(generator, PromiseImpl) {\n    function invoke(method, arg, resolve, reject) {\n      var record = tryCatch(generator[method], generator, arg);\n      if (record.type === \"throw\") {\n        reject(record.arg);\n      } else {\n        var result = record.arg;\n        var value = result.value;\n        if (value &&\n            typeof value === \"object\" &&\n            hasOwn.call(value, \"__await\")) {\n          return PromiseImpl.resolve(value.__await).then(function(value) {\n            invoke(\"next\", value, resolve, reject);\n          }, function(err) {\n            invoke(\"throw\", err, resolve, reject);\n          });\n        }\n\n        return PromiseImpl.resolve(value).then(function(unwrapped) {\n          // When a yielded Promise is resolved, its final value becomes\n          // the .value of the Promise<{value,done}> result for the\n          // current iteration.\n          result.value = unwrapped;\n          resolve(result);\n        }, function(error) {\n          // If a rejected Promise was yielded, throw the rejection back\n          // into the async generator function so it can be handled there.\n          return invoke(\"throw\", error, resolve, reject);\n        });\n      }\n    }\n\n    var previousPromise;\n\n    function enqueue(method, arg) {\n      function callInvokeWithMethodAndArg() {\n        return new PromiseImpl(function(resolve, reject) {\n          invoke(method, arg, resolve, reject);\n        });\n      }\n\n      return previousPromise =\n        // If enqueue has been called before, then we want to wait until\n        // all previous Promises have been resolved before calling invoke,\n        // so that results are always delivered in the correct order. If\n        // enqueue has not been called before, then it is important to\n        // call invoke immediately, without waiting on a callback to fire,\n        // so that the async generator function has the opportunity to do\n        // any necessary setup in a predictable way. This predictability\n        // is why the Promise constructor synchronously invokes its\n        // executor callback, and why async functions synchronously\n        // execute code before the first await. Since we implement simple\n        // async functions in terms of async generators, it is especially\n        // important to get this right, even though it requires care.\n        previousPromise ? previousPromise.then(\n          callInvokeWithMethodAndArg,\n          // Avoid propagating failures to Promises returned by later\n          // invocations of the iterator.\n          callInvokeWithMethodAndArg\n        ) : callInvokeWithMethodAndArg();\n    }\n\n    // Define the unified helper method that is used to implement .next,\n    // .throw, and .return (see defineIteratorMethods).\n    this._invoke = enqueue;\n  }\n\n  defineIteratorMethods(AsyncIterator.prototype);\n  AsyncIterator.prototype[asyncIteratorSymbol] = function () {\n    return this;\n  };\n  exports.AsyncIterator = AsyncIterator;\n\n  // Note that simple async functions are implemented on top of\n  // AsyncIterator objects; they just return a Promise for the value of\n  // the final result produced by the iterator.\n  exports.async = function(innerFn, outerFn, self, tryLocsList, PromiseImpl) {\n    if (PromiseImpl === void 0) PromiseImpl = Promise;\n\n    var iter = new AsyncIterator(\n      wrap(innerFn, outerFn, self, tryLocsList),\n      PromiseImpl\n    );\n\n    return exports.isGeneratorFunction(outerFn)\n      ? iter // If outerFn is a generator, return the full iterator.\n      : iter.next().then(function(result) {\n          return result.done ? result.value : iter.next();\n        });\n  };\n\n  function makeInvokeMethod(innerFn, self, context) {\n    var state = GenStateSuspendedStart;\n\n    return function invoke(method, arg) {\n      if (state === GenStateExecuting) {\n        throw new Error(\"Generator is already running\");\n      }\n\n      if (state === GenStateCompleted) {\n        if (method === \"throw\") {\n          throw arg;\n        }\n\n        // Be forgiving, per 25.3.3.3.3 of the spec:\n        // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-generatorresume\n        return doneResult();\n      }\n\n      context.method = method;\n      context.arg = arg;\n\n      while (true) {\n        var delegate = context.delegate;\n        if (delegate) {\n          var delegateResult = maybeInvokeDelegate(delegate, context);\n          if (delegateResult) {\n            if (delegateResult === ContinueSentinel) continue;\n            return delegateResult;\n          }\n        }\n\n        if (context.method === \"next\") {\n          // Setting context._sent for legacy support of Babel's\n          // function.sent implementation.\n          context.sent = context._sent = context.arg;\n\n        } else if (context.method === \"throw\") {\n          if (state === GenStateSuspendedStart) {\n            state = GenStateCompleted;\n            throw context.arg;\n          }\n\n          context.dispatchException(context.arg);\n\n        } else if (context.method === \"return\") {\n          context.abrupt(\"return\", context.arg);\n        }\n\n        state = GenStateExecuting;\n\n        var record = tryCatch(innerFn, self, context);\n        if (record.type === \"normal\") {\n          // If an exception is thrown from innerFn, we leave state ===\n          // GenStateExecuting and loop back for another invocation.\n          state = context.done\n            ? GenStateCompleted\n            : GenStateSuspendedYield;\n\n          if (record.arg === ContinueSentinel) {\n            continue;\n          }\n\n          return {\n            value: record.arg,\n            done: context.done\n          };\n\n        } else if (record.type === \"throw\") {\n          state = GenStateCompleted;\n          // Dispatch the exception by looping back around to the\n          // context.dispatchException(context.arg) call above.\n          context.method = \"throw\";\n          context.arg = record.arg;\n        }\n      }\n    };\n  }\n\n  // Call delegate.iterator[context.method](context.arg) and handle the\n  // result, either by returning a { value, done } result from the\n  // delegate iterator, or by modifying context.method and context.arg,\n  // setting context.delegate to null, and returning the ContinueSentinel.\n  function maybeInvokeDelegate(delegate, context) {\n    var method = delegate.iterator[context.method];\n    if (method === undefined) {\n      // A .throw or .return when the delegate iterator has no .throw\n      // method always terminates the yield* loop.\n      context.delegate = null;\n\n      if (context.method === \"throw\") {\n        // Note: [\"return\"] must be used for ES3 parsing compatibility.\n        if (delegate.iterator[\"return\"]) {\n          // If the delegate iterator has a return method, give it a\n          // chance to clean up.\n          context.method = \"return\";\n          context.arg = undefined;\n          maybeInvokeDelegate(delegate, context);\n\n          if (context.method === \"throw\") {\n            // If maybeInvokeDelegate(context) changed context.method from\n            // \"return\" to \"throw\", let that override the TypeError below.\n            return ContinueSentinel;\n          }\n        }\n\n        context.method = \"throw\";\n        context.arg = new TypeError(\n          \"The iterator does not provide a 'throw' method\");\n      }\n\n      return ContinueSentinel;\n    }\n\n    var record = tryCatch(method, delegate.iterator, context.arg);\n\n    if (record.type === \"throw\") {\n      context.method = \"throw\";\n      context.arg = record.arg;\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    var info = record.arg;\n\n    if (! info) {\n      context.method = \"throw\";\n      context.arg = new TypeError(\"iterator result is not an object\");\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    if (info.done) {\n      // Assign the result of the finished delegate to the temporary\n      // variable specified by delegate.resultName (see delegateYield).\n      context[delegate.resultName] = info.value;\n\n      // Resume execution at the desired location (see delegateYield).\n      context.next = delegate.nextLoc;\n\n      // If context.method was \"throw\" but the delegate handled the\n      // exception, let the outer generator proceed normally. If\n      // context.method was \"next\", forget context.arg since it has been\n      // \"consumed\" by the delegate iterator. If context.method was\n      // \"return\", allow the original .return call to continue in the\n      // outer generator.\n      if (context.method !== \"return\") {\n        context.method = \"next\";\n        context.arg = undefined;\n      }\n\n    } else {\n      // Re-yield the result returned by the delegate method.\n      return info;\n    }\n\n    // The delegate iterator is finished, so forget it and continue with\n    // the outer generator.\n    context.delegate = null;\n    return ContinueSentinel;\n  }\n\n  // Define Generator.prototype.{next,throw,return} in terms of the\n  // unified ._invoke helper method.\n  defineIteratorMethods(Gp);\n\n  define(Gp, toStringTagSymbol, \"Generator\");\n\n  // A Generator should always return itself as the iterator object when the\n  // @@iterator function is called on it. Some browsers' implementations of the\n  // iterator prototype chain incorrectly implement this, causing the Generator\n  // object to not be returned from this call. This ensures that doesn't happen.\n  // See https://github.com/facebook/regenerator/issues/274 for more details.\n  Gp[iteratorSymbol] = function() {\n    return this;\n  };\n\n  Gp.toString = function() {\n    return \"[object Generator]\";\n  };\n\n  function pushTryEntry(locs) {\n    var entry = { tryLoc: locs[0] };\n\n    if (1 in locs) {\n      entry.catchLoc = locs[1];\n    }\n\n    if (2 in locs) {\n      entry.finallyLoc = locs[2];\n      entry.afterLoc = locs[3];\n    }\n\n    this.tryEntries.push(entry);\n  }\n\n  function resetTryEntry(entry) {\n    var record = entry.completion || {};\n    record.type = \"normal\";\n    delete record.arg;\n    entry.completion = record;\n  }\n\n  function Context(tryLocsList) {\n    // The root entry object (effectively a try statement without a catch\n    // or a finally block) gives us a place to store values thrown from\n    // locations where there is no enclosing try statement.\n    this.tryEntries = [{ tryLoc: \"root\" }];\n    tryLocsList.forEach(pushTryEntry, this);\n    this.reset(true);\n  }\n\n  exports.keys = function(object) {\n    var keys = [];\n    for (var key in object) {\n      keys.push(key);\n    }\n    keys.reverse();\n\n    // Rather than returning an object with a next method, we keep\n    // things simple and return the next function itself.\n    return function next() {\n      while (keys.length) {\n        var key = keys.pop();\n        if (key in object) {\n          next.value = key;\n          next.done = false;\n          return next;\n        }\n      }\n\n      // To avoid creating an additional object, we just hang the .value\n      // and .done properties off the next function object itself. This\n      // also ensures that the minifier will not anonymize the function.\n      next.done = true;\n      return next;\n    };\n  };\n\n  function values(iterable) {\n    if (iterable) {\n      var iteratorMethod = iterable[iteratorSymbol];\n      if (iteratorMethod) {\n        return iteratorMethod.call(iterable);\n      }\n\n      if (typeof iterable.next === \"function\") {\n        return iterable;\n      }\n\n      if (!isNaN(iterable.length)) {\n        var i = -1, next = function next() {\n          while (++i < iterable.length) {\n            if (hasOwn.call(iterable, i)) {\n              next.value = iterable[i];\n              next.done = false;\n              return next;\n            }\n          }\n\n          next.value = undefined;\n          next.done = true;\n\n          return next;\n        };\n\n        return next.next = next;\n      }\n    }\n\n    // Return an iterator with no values.\n    return { next: doneResult };\n  }\n  exports.values = values;\n\n  function doneResult() {\n    return { value: undefined, done: true };\n  }\n\n  Context.prototype = {\n    constructor: Context,\n\n    reset: function(skipTempReset) {\n      this.prev = 0;\n      this.next = 0;\n      // Resetting context._sent for legacy support of Babel's\n      // function.sent implementation.\n      this.sent = this._sent = undefined;\n      this.done = false;\n      this.delegate = null;\n\n      this.method = \"next\";\n      this.arg = undefined;\n\n      this.tryEntries.forEach(resetTryEntry);\n\n      if (!skipTempReset) {\n        for (var name in this) {\n          // Not sure about the optimal order of these conditions:\n          if (name.charAt(0) === \"t\" &&\n              hasOwn.call(this, name) &&\n              !isNaN(+name.slice(1))) {\n            this[name] = undefined;\n          }\n        }\n      }\n    },\n\n    stop: function() {\n      this.done = true;\n\n      var rootEntry = this.tryEntries[0];\n      var rootRecord = rootEntry.completion;\n      if (rootRecord.type === \"throw\") {\n        throw rootRecord.arg;\n      }\n\n      return this.rval;\n    },\n\n    dispatchException: function(exception) {\n      if (this.done) {\n        throw exception;\n      }\n\n      var context = this;\n      function handle(loc, caught) {\n        record.type = \"throw\";\n        record.arg = exception;\n        context.next = loc;\n\n        if (caught) {\n          // If the dispatched exception was caught by a catch block,\n          // then let that catch block handle the exception normally.\n          context.method = \"next\";\n          context.arg = undefined;\n        }\n\n        return !! caught;\n      }\n\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        var record = entry.completion;\n\n        if (entry.tryLoc === \"root\") {\n          // Exception thrown outside of any try block that could handle\n          // it, so set the completion value of the entire function to\n          // throw the exception.\n          return handle(\"end\");\n        }\n\n        if (entry.tryLoc <= this.prev) {\n          var hasCatch = hasOwn.call(entry, \"catchLoc\");\n          var hasFinally = hasOwn.call(entry, \"finallyLoc\");\n\n          if (hasCatch && hasFinally) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            } else if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else if (hasCatch) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            }\n\n          } else if (hasFinally) {\n            if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else {\n            throw new Error(\"try statement without catch or finally\");\n          }\n        }\n      }\n    },\n\n    abrupt: function(type, arg) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc <= this.prev &&\n            hasOwn.call(entry, \"finallyLoc\") &&\n            this.prev < entry.finallyLoc) {\n          var finallyEntry = entry;\n          break;\n        }\n      }\n\n      if (finallyEntry &&\n          (type === \"break\" ||\n           type === \"continue\") &&\n          finallyEntry.tryLoc <= arg &&\n          arg <= finallyEntry.finallyLoc) {\n        // Ignore the finally entry if control is not jumping to a\n        // location outside the try/catch block.\n        finallyEntry = null;\n      }\n\n      var record = finallyEntry ? finallyEntry.completion : {};\n      record.type = type;\n      record.arg = arg;\n\n      if (finallyEntry) {\n        this.method = \"next\";\n        this.next = finallyEntry.finallyLoc;\n        return ContinueSentinel;\n      }\n\n      return this.complete(record);\n    },\n\n    complete: function(record, afterLoc) {\n      if (record.type === \"throw\") {\n        throw record.arg;\n      }\n\n      if (record.type === \"break\" ||\n          record.type === \"continue\") {\n        this.next = record.arg;\n      } else if (record.type === \"return\") {\n        this.rval = this.arg = record.arg;\n        this.method = \"return\";\n        this.next = \"end\";\n      } else if (record.type === \"normal\" && afterLoc) {\n        this.next = afterLoc;\n      }\n\n      return ContinueSentinel;\n    },\n\n    finish: function(finallyLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.finallyLoc === finallyLoc) {\n          this.complete(entry.completion, entry.afterLoc);\n          resetTryEntry(entry);\n          return ContinueSentinel;\n        }\n      }\n    },\n\n    \"catch\": function(tryLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc === tryLoc) {\n          var record = entry.completion;\n          if (record.type === \"throw\") {\n            var thrown = record.arg;\n            resetTryEntry(entry);\n          }\n          return thrown;\n        }\n      }\n\n      // The context.catch method must only be called with a location\n      // argument that corresponds to a known catch block.\n      throw new Error(\"illegal catch attempt\");\n    },\n\n    delegateYield: function(iterable, resultName, nextLoc) {\n      this.delegate = {\n        iterator: values(iterable),\n        resultName: resultName,\n        nextLoc: nextLoc\n      };\n\n      if (this.method === \"next\") {\n        // Deliberately forget the last sent value so that we don't\n        // accidentally pass it on to the delegate.\n        this.arg = undefined;\n      }\n\n      return ContinueSentinel;\n    }\n  };\n\n  // Regardless of whether this script is executing as a CommonJS module\n  // or not, return the runtime object so that we can declare the variable\n  // regeneratorRuntime in the outer scope, which allows this module to be\n  // injected easily by `bin/regenerator --include-runtime script.js`.\n  return exports;\n\n}(\n  // If this script is executing as a CommonJS module, use module.exports\n  // as the regeneratorRuntime namespace. Otherwise create a new empty\n  // object. Either way, the resulting object will be used to initialize\n  // the regeneratorRuntime variable at the top of this file.\n  typeof module === \"object\" ? module.exports : {}\n));\n\ntry {\n  regeneratorRuntime = runtime;\n} catch (accidentalStrictMode) {\n  // This module should not be running in strict mode, so the above\n  // assignment should always work unless something is misconfigured. Just\n  // in case runtime.js accidentally runs in strict mode, we can escape\n  // strict mode using a global Function call. This could conceivably fail\n  // if a Content Security Policy forbids using Function, but in that case\n  // the proper solution is to fix the accidental strict mode problem. If\n  // you've misconfigured your bundler to force strict mode and applied a\n  // CSP to forbid Function, and you're not willing to fix either of those\n  // problems, please detail your unique predicament in a GitHub issue.\n  Function(\"r\", \"regeneratorRuntime = r\")(runtime);\n}\n","import 'regenerator-runtime/runtime';\r\n\r\nconst init = function () {\r\n  document.getElementById('register_submit').addEventListener('click', register_send);\r\n  document.getElementById('login_submit').addEventListener('click', login_send);\r\n  document.getElementById('rodo_link').addEventListener('click', rodo_show);\r\n  document.getElementById('rodo_button_accept').addEventListener('click', rodo_check);\r\n  document.getElementById('rodo_button_cancel').addEventListener('click', rodo_hide);\r\n};\r\n\r\nconst register_send = async function (ev) {\r\n  //Czyszczenie poprzednich błędów\r\n  document.getElementById('firstName').classList.remove('error');\r\n  document.getElementById('firstName').parentElement.classList.remove('error-msg2');\r\n  document.getElementById('lastName').classList.remove('error');\r\n  document.getElementById('lastName').parentElement.classList.remove('error-msg2');\r\n  document.getElementById('email').classList.remove('error');\r\n  document.getElementById('email').parentElement.classList.remove('error-msg2');\r\n  document.getElementById('phone').classList.remove('error');\r\n  document.getElementById('phone').parentElement.classList.remove('error-msg2');\r\n  document.getElementById('password').classList.remove('error');\r\n  document.getElementById('password').parentElement.classList.remove('error-msg2');\r\n  document.getElementById('password2').classList.remove('error');\r\n  document.getElementById('password2').parentElement.classList.remove('error-msg2');\r\n  document.getElementById('rodo').classList.remove('error');\r\n  document.getElementById('rodo').parentElement.classList.remove('error-msg2');\r\n\r\n  //Potwierdzenie opuszczenia strony\r\n  window.onbeforeunload = function (e) {\r\n    var message = 'Strona prosi o potwierdzenie decyzji jej opuszczenia',\r\n      e = e || window.event;\r\n    if (e) {\r\n      e.returnValue = message;\r\n    }\r\n    return message;\r\n  };\r\n\r\n  try {\r\n    const res = await axios.post('http://localhost:5000/api/users', {\r\n      firstName: document.getElementById('firstName').value,\r\n      lastName: document.getElementById('lastName').value,\r\n      email: document.getElementById('email').value,\r\n      phone: document.getElementById('phone').value,\r\n      drivingLicense: document.getElementById('drivingLicense').value,\r\n      password: document.getElementById('password').value,\r\n      password2: document.getElementById('password2').value,\r\n      rodo: document.getElementById('rodo').checked,\r\n    });\r\n    console.log(res);\r\n    window.onbeforeunload = 0;\r\n    localStorage.setItem('token', res.data.token);\r\n    console.log(localStorage.getItem('token'));\r\n    console.log(res.data.token);\r\n  } catch (err) {\r\n    console.log(err);\r\n    const errors = err.response.data.errors;\r\n    if (errors) {\r\n      errors.forEach((error) => {\r\n        let field = document.getElementById(error.param);\r\n        field.classList.add('error');\r\n        field.parentElement.classList.add('error-msg2');\r\n        field.parentElement.setAttribute('data-errormsg', error.msg);\r\n      })\r\n    }\r\n  }\r\n};\r\n\r\nconst login_send = async function (ev) {\r\n  //Czyszczenie poprzednich błędów\r\n  document.getElementById('login_email').classList.remove('error');\r\n  document.getElementById('login_email').parentElement.classList.remove('error-msg2');\r\n  document.getElementById('login_password').classList.remove('error');\r\n  document.getElementById('login_password').parentElement.classList.remove('error-msg2');\r\n\r\n  try {\r\n    const res = await axios.post('http://localhost:5000/api/auth', {\r\n      email: document.getElementById('login_email').value,\r\n      password: document.getElementById('login_password').value,\r\n    });\r\n    console.log(res);\r\n    window.onbeforeunload = 0;\r\n    localStorage.setItem('token', res.data.token);\r\n    console.log(localStorage.getItem('token'));\r\n    console.log(res.data.token);\r\n  } catch (err) {\r\n    console.log(err);\r\n    const errors = err.response.data.errors;\r\n    if (errors) {\r\n      errors.forEach((error) => {\r\n        let field = document.getElementById('login_'+error.param);\r\n        field.classList.add('error');\r\n        field.parentElement.classList.add('error-msg2');\r\n        field.parentElement.setAttribute('data-errormsg', error.msg);\r\n      })\r\n    }\r\n  }\r\n};\r\n\r\nconst rodo_show = function (ev) {\r\n  document.getElementById('rodo_div').style.visibility = 'visible';\r\n};\r\n\r\nconst rodo_hide = function (ev) {\r\n  document.getElementById('rodo_div').style.visibility = 'hidden';\r\n};\r\n\r\nconst rodo_check = function (ev) {\r\n  rodo_hide();\r\n  document.getElementById('rodo').checked = true;\r\n};\r\n\r\ndocument.addEventListener('DOMContentLoaded', init);\r\n"]}